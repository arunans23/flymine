assert {
  sql: select count(*) > 5 from organism
}
assert {
  sql: select count(*) < 10 from organism
}
results-report {
  sql: select * from organism
}
no-results {
  sql: select gene.id from gene where length > 1000000
}
some-results {
  sql: select gene.id from gene, organism where organismid = organism.id
}
no-results {
  sql: select l1.id, l1.intermine_start, l2.id, l2.intermine_end from location as l1, location as l2 where l1.subjectid = l2.subjectid and l1.objectid = l2.objectid and l1.intermine_start = l2.intermine_start and l1.intermine_end = l2.intermine_end and l1.id <> l2.id
  note: no two location objects should have the same objectid, subjectid, start and end positions
}
no-results {
  sql: select rr1.identifier, rr1.id, rr2.identifier, rr2.id from regulatoryregion as rr1, regulatoryregion as rr2 where rr1.identifier = rr2.identifier and rr1.id <> rr2.id
  note: no two regulatoryregions should have the identifier (see #564)
}
no-results {
  sql: select gene1.identifier, gene1.id, gene2.identifier, gene2.id from gene as gene1, gene as gene2 where gene1.identifier = gene2.identifier and gene1.id <> gene2.id
  note: no two genes should have the identifier
}
no-results {
  sql: select loc1.id, loc2.id, sv.id from location as loc1, location as loc2, sequencevariant as sv where loc1.subjectid = loc2.subjectid and loc1.subjectid = sv.id and loc1.id <> loc2.id
  note: no sequencevariants should have more than one location (ticket #540)
}
no-results {
  sql: select * from chromosomeband where identifier = '-'
  note: see ticket #567
}
