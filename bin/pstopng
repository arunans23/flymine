#!/bin/bash

if test -d $HOME/tmp ; then
	TMP_DIR=$HOME/tmp
else
	TMP_DIR=/tmp
fi

FILENAME="stdin"
RES=100
ANTIALIAS=4
DELETE_AFTER=False
RES_SET=False
SZX_SET=False
SZY_SET=False
ALPHA=False

while test $# -gt 0 ; do
	case $1 in
	    -r)
		if test $# -gt 1 ; then
			RES=$2
			RES_SET=True
			shift
			#echo "Resolution set to $RES" 1>&2
		else
			echo "-r needs an option" 1>&2
			exit
		fi
		;;
	    -a)
		if test $# -gt 1 ; then
			ANTIALIAS=$2
			shift
			#echo "Antialiasing set to $ANTIALIAS" 1>&2
		else
			echo "-a needs an option" 1>&2
			exit
		fi
		;;
	    -x)
		if test $# -gt 1 ; then
			SZX=$2
			SZX_SET=True
			shift
			#echo "X-Size set to $SZX" 1>&2
		else
			echo "-x needs an option" 1>&2
			exit
		fi
		;;
	    -y)
		if test $# -gt 1 ; then
			SZY=$2
			SZY_SET=True
			shift
			#echo "Y-Size set to $SZY" 1>&2
		else
			echo "-y needs an option" 1>&2
			exit
		fi
		;;
	    -A)
		ALPHA=True
		;;
	    *)
		FILENAME=$1
		;;
	esac
	shift
done

#if test "True" = "$RES_SET" && ( test "True" = "$SZX_SET" || test "True" = "SZY_SET" ) ; then
#	echo "You can't mix resolution and size arguments" 1>&2
#	exit
#fi
#if test "True" = "$SZY_SET" && test "True" = "$SZX_SET" ; then
#	echo "You can't mix -x and -y arguments" 1>&2
#	exit
#fi

if test "$FILENAME" == "stdin" ; then
	FILENAME=${TMP_DIR}/`hexdump </dev/urandom | head -n 1 | tr -d " "`
	DELETE_AFTER=True
	TODELETE=$FILENAME
	cat >$FILENAME
fi

BBOX=`gs -q -sDEVICE=bbox -sOutputFile=- -r100x100 -g100000x100000 -dBATCH -dNOPAUSE $FILENAME 2>&1 | grep "%%BoundingBox:" | sed -e "s/^%%BoundingBox: //"`
WIDTH=`echo $BBOX | sed -e "s/^[^ ]\+ [^ ]\+ \([^ ]\+\) [^ ]\+$/\1/g"`
HEIGHT=`echo $BBOX | sed -e "s/^[^ ]\+ [^ ]\+ [^ ]\+ \([^ ]\+\)$/\1/g"`
LEFT=`echo $BBOX | sed -e "s/^\([^ ]\+\) [^ ]\+ [^ ]\+ [^ ]\+$/\1/g"`
BOTTOM=`echo $BBOX | sed -e "s/^[^ ]\+ \([^ ]\+\) [^ ]\+ [^ ]\+$/\1/g"`

USWIDTH=`echo "(($WIDTH * $RES) / 72) * $ANTIALIAS" | bc`
USHEIGHT=`echo "(($HEIGHT * $RES) / 72) * $ANTIALIAS" | bc`
USRES=`echo "$RES * $ANTIALIAS" | bc`
USLEFT=`echo "(($LEFT * $RES) / 72) * $ANTIALIAS" | bc`
USBOTTOM=`echo "$USHEIGHT - ((($BOTTOM * $RES) / 72) * $ANTIALIAS) - 1" | bc`

if test "True" = "$SZX_SET" ; then
	if test "False" = "$RES_SET" || test "$USWIDTH" -gt "`echo "${SZX} * $ANTIALIAS" | bc`" ; then
		USWIDTH=`echo "$SZX * $ANTIALIAS" | bc`
		USHEIGHT=`echo "(($SZX * $HEIGHT) / $WIDTH) * $ANTIALIAS" | bc`
		USRES=`echo "(($SZX * 72) / $WIDTH) * $ANTIALIAS" | bc`
		USLEFT=`echo "(($SZX * $LEFT) / $WIDTH) * $ANTIALIAS" | bc`
		USBOTTOM=`echo "$USHEIGHT - ((($SZX * $BOTTOM) / $WIDTH) * $ANTIALIAS) - 1" | bc`
	fi
fi
if test "True" = "$SZY_SET" ; then
	if ( test "False" = "$RES_SET" && test "False" = "$SZX_SET" ) || test "$USHEIGHT" -gt "`echo "${SZY} * $ANTIALIAS" | bc`" ; then
		USWIDTH=`echo "(($SZY * $WIDTH) / $HEIGHT) * $ANTIALIAS" | bc`
		USHEIGHT=`echo "$SZY * $ANTIALIAS" | bc`
		USRES=`echo "(($SZY * 72) / $HEIGHT) * $ANTIALIAS" | bc`
		USLEFT=`echo "(($SZY * $LEFT) / $HEIGHT) * $ANTIALIAS" | bc`
		USBOTTOM=`echo "$USHEIGHT - ((($SZY * $BOTTOM) / $HEIGHT) * $ANTIALIAS) - 1" | bc`
	fi
fi

USBOTTOMPLUSONE=`echo "$USBOTTOM + 1" | bc`

#echo "$BBOX $WIDTH $HEIGHT $USWIDTH $USHEIGHT $USRES" 1>&2

LARGE_FILENAME=${TMP_DIR}/`hexdump </dev/urandom | head -n 1 | tr -d " "`
CUT_FILENAME=${TMP_DIR}/`hexdump </dev/urandom | head -n 1 | tr -d " "`
COLOUR_FILENAME=${TMP_DIR}/`hexdump </dev/urandom | head -n 1 | tr -d " "`
ALPHA_FILENAME=${TMP_DIR}/`hexdump </dev/urandom | head -n 1 | tr -d " "`

if test "True" = "$ALPHA" ; then
	gs -q -sDEVICE=ppmraw -sOutputFile=- -r${USRES}x${USRES} -g${USWIDTH}x${USHEIGHT} -dBATCH -dNOPAUSE $FILENAME >$LARGE_FILENAME
	if test "$USLEFT" != "0" || test "$USBOTTOMPLUSONE" != "$USHEIGHT" ; then
		echo "Cutting picture" 1>&2
		pnmcut -left $USLEFT -bottom $USBOTTOM <$LARGE_FILENAME >$CUT_FILENAME
		mv $CUT_FILENAME $LARGE_FILENAME
	fi
	pnmscalealpha $LARGE_FILENAME $COLOUR_FILENAME $ALPHA_FILENAME $ANTIALIAS
	pnmtopng -alpha $ALPHA_FILENAME $COLOUR_FILENAME 2>/dev/null
	rm $ALPHA_FILENAME $LARGE_FILENAME $COLOUR_FILENAME
else
	gs -q -sDEVICE=ppmraw -sOutputFile=- -r${USRES}x${USRES} -g${USWIDTH}x${USHEIGHT} -dBATCH -dNOPAUSE $FILENAME >$LARGE_FILENAME
	if test "$USLEFT" != "0" || test "$USBOTTOMPLUSONE" != "$USHEIGHT" ; then
		echo "Cutting picture" 1>&2
		pnmcut -left $USLEFT -bottom $USBOTTOM <$LARGE_FILENAME >$CUT_FILENAME
		mv $CUT_FILENAME $LARGE_FILENAME
	fi
	pnmscale --reduce $ANTIALIAS <$LARGE_FILENAME 2>/dev/null | pnmtopng
	rm $LARGE_FILENAME
fi

if test "$DELETE_AFTER" = "True" ; then
	rm $TODELETE
fi

