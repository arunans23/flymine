<?xml version="1.0"?>

<article>

<artheader>
<date>2003-04-17</date>
<title>Using the FlyMine Query Optimiser as a standalone module</title>
</artheader>

<para>The FlyMine Query Optimiser can be used by itself in a number of
ways, depending on your needs. All options require the
<filename>flymine.jar</filename> file to be in your classpath. See the
<ulink url="building">download/building instructions</ulink> for
details of how to obtain this file.</para>

<sect1>
<title>Building precomputed tables</title>

<para>All precomputed tables must be built by using the
PrecomputedTableManager class, which maintains an index of the tables
it has created, along with the SQL used to create the precomputed
table. For example:</para>

<programlisting>
import org.flymine.sql.Database;
import org.flymine.sql.DatabaseFactory;
import org.flymine.sql.query.Query;
import org.flymine.sql.precompute.PrecomputedTable;
import org.flymine.sql.precompute.PrecomputedTableManager;

// Create a PrecomputedTableManager
Database db = DatabaseFactory.getDatabase("db.main"); // configure db.main in flymine.properties
PrecomputedTableManager ptm = new PrecomputedTableManager.getInstance(db);

// Add a precomputed table to the database
Query q1 = new Query("select a.column1, a.column2, b.column1, b.column2 from a, b where a.column3 = b.column3");
PrecomputedTable pt1 = new PrecomputedTable(q1, "precomp1")
ptm.add(pt1);

// Add another precomputed table to the database
Query q2 = new Query("select c.column1, count(*) as count from c group by c.column1");
PrecomputedTable pt2 = new PrecomputedTable(q2, "precomp2")
ptm.add(pt2);


</programlisting>

</sect1>

<sect1>
<title>Query Optimising</title>

<sect2>
<title>From within an existing Java application</title>

<para>Simply call the function <command>optimisedSqlString =
QueryOptimiser.optimise(sqlString)</command> wherever you have an sql
string that needs optimising. Run the resulting optimised SQL string
as usual.</para>

</sect2>

<sect2>
<title>Intercepting JDBC calls</title>

<para>The Query Optimiser can be used in conjunction with the <ulink
url="http://www.p6spy.com">P6Spy</ulink> software to intercept JDBC
calls and rewrite queries to use the optimiser. This has the advantage
that no changes to the application need to be made. More details to
follow shortly....</para>

</sect2>

</sect1>

</article>
